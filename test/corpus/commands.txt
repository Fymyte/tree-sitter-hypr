========================================
Command exec/exec-once
========================================

exec = echo toto
# We want this to be a shell command
exec-once=sh -c '~/.local/share/autolock.sh'

exec = echo the command only starts after # this is an hypr comment
exec = echo the command only starts after ## this is a shell comment
exec = echo the command only starts after ### this is an hypr comment

---

(config_file
  (command
    (command_exec (shell_command)))
  (comment)
  (command
    (command_exec_once (shell_command)))
  (command
    (command_exec (shell_command))
    (comment))
  (command
    (command_exec (shell_command)))
  (command
    (command_exec (shell_command))
    (comment)))

========================================
Command source
========================================

source=~/.config/hypr/mycolors.conf
 source =   ./hypr/themes/colors/catppuccin.conf


# Sourcing my color scheme
source   =./hypr/themes/colors/catppuccin.conf

---

(config_file
  (command
    (command_source (str)))
  (command
    (command_source (str)))
  (comment)
  (command
    (command_source (str))))

========================================
Command layerrule
========================================

layerrule = blur, hyprpaper
layerrule = unset, hyprpaper
layerrule = blur,address:0x55e5ad6a0fd0
layerrule = unset, address:0x55e5ad6a0fd0


---

(config_file
  (command
    (command_layerrule
      rule: (layer_rule)
      identifier: (layer_identifier (layer_namespace))))
  (command
    (command_layerrule
      rule: (layer_rule)
      identifier: (layer_identifier (layer_namespace))))
  (command
    (command_layerrule
      rule: (layer_rule)
      identifier: (layer_identifier (layer_address))))
  (command
    (command_layerrule
      rule: (layer_rule)
      identifier: (layer_identifier (layer_address)))))

========================================
Command env
========================================

env = QT_QPA_PLATFORM,wayland
env = XCURSOR_SIZE,24
envd = XCURSOR_SIZE,24

---

(config_file
  (command
    (command_env
      name: (word)
      value: (str)))
  (command
    (command_env
      name: (word)
      value: (str)))
  (command
    (command_envd
      name: (word)
      value: (str))))

========================================
Command monitor
========================================

monitor= DP-1, preferred, auto, auto
monitor= HDMI-2, preferred, auto, auto
monitor = ,preferred, auto, auto
monitor = ,highres, auto, auto
monitor = ,highrr, auto, auto
monitor = DP-1, 1920x1080, 0x0, 1.
monitor = DP-1, 1920x1080@144, 0x0, 1.
monitor=desc:SDC 0x4154,preferred,auto,1.5
monitor=name,disable
monitor=DP-3,1920x1080@60,0x0,1,mirror,DP-2
monitor=,preferred,auto,1,mirror,DP-1
monitor=eDP-1,2880x1800@90,0x0,1,bitdepth,10
monitor=eDP-1,2880x1800@90,0x0,1,transform,1
monitor=eDP-1,2880x1800@90,0x0,1,transform,1,mirror,DP-2,bitdepth,10

---

(config_file
  (command
    (command_monitor
      name: (word)
      resolution: (auto_resolution)
      position: (auto)
      scale: (auto)))
  (command
    (command_monitor
      name: (word)
      resolution: (auto_resolution)
      position: (auto)
      scale: (auto)))
  (command
    (command_monitor
      resolution: (auto_resolution)
      position: (auto)
      scale: (auto)))
  (command
    (command_monitor
      resolution: (auto_resolution)
      position: (auto)
      scale: (auto)))
  (command
    (command_monitor
      resolution: (auto_resolution)
      position: (auto)
      scale: (auto)))
  (command
    (command_monitor
      name: (word)
      resolution: (resolution width: (int) (by) height: (int))
      position: (position x_offset: (int) (by) y_offset: (int))
      scale: (float)))
  (command
    (command_monitor
      name: (word)
      resolution: (resolution width: (int) (by) height: (int) (at) refresh_rate: (int))
      position: (position x_offset: (int) (by) y_offset: (int))
      scale: (float)))
  (command
    (command_monitor
      name: (monitor_desc)
      resolution: (auto_resolution)
      position: (auto)
      scale: (float)))
  (command
    (command_monitor
      name: (word)
      (disable)))
  (command
   (command_monitor
    name: (word)
    resolution: (resolution width: (int) (by) height: (int) (at) refresh_rate: (int))
    position: (position x_offset: (int) (by) y_offset: (int))
    scale: (float)
    (mirror
     mirror: (word))))
  (command
    (command_monitor
      resolution: (auto_resolution)
      position: (auto)
      scale: (float)
      (mirror mirror: (word))))
  (command
    (command_monitor
      name: (word)
      resolution: (resolution width: (int) (by) height: (int) (at) refresh_rate: (int))
      position: (position x_offset: (int) (by) y_offset: (int))
      scale: (float)
      (bitdepth
        bitdepth: (int))))
  (command
    (command_monitor
      name: (word)
      resolution: (resolution width: (int) (by) height: (int) (at) refresh_rate: (int))
      position: (position x_offset: (int) (by) y_offset: (int))
      scale: (float)
      (transform
        transform: (int))))
  (command
    (command_monitor
      name: (word)
      resolution: (resolution width: (int) (by) height: (int) (at) refresh_rate: (int))
      position: (position x_offset: (int) (by) y_offset: (int))
      scale: (float)
      (transform
        transform: (int))
      (mirror
        mirror: (word))
      (bitdepth
        bitdepth: (int)))))
